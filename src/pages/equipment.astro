---
import BaseLayout from "../layouts/BaseLayout.astro";
import ModernEquipmentCard from "../components/ModernEquipmentCard.jsx";
import RealTimeChart from "../components/RealTimeChart.jsx";
import StatusIndicator from "../components/StatusIndicator.jsx";
import FloatingActions from "../components/FloatingActions.jsx";
import EquipmentStatusCard from "../components/EquipmentStatusCard.jsx";

// Server-side data fetching
const getEquipmentData = async () => {
  const equipment = [
    {
      id: 'perlick-1',
      name: 'Perlick Glycol Chiller',
      model: '4420-2',
      icon: 'üç∫',
      status: 'operational',
      uptime: 98,
      temperature: 38,
      pressure: 22,
      priority: 'high',
      category: 'Refrigeration',
      lastMaintenance: '2024-01-15',
      nextMaintenance: '2024-02-15',
      description: 'High-efficiency glycol chiller for beer dispensing systems'
    },
    {
      id: 'hoshizaki-1',
      name: 'Hoshizaki Ice Maker',
      model: 'KM-500MAH',
      icon: 'üßä',
      status: 'operational',
      uptime: 95,
      temperature: 35,
      pressure: 18,
      priority: 'high',
      category: 'Refrigeration',
      lastMaintenance: '2024-01-10',
      nextMaintenance: '2024-02-10',
      description: 'Commercial ice maker with 500 lbs daily production capacity'
    },
    {
      id: 'turbochef-1',
      name: 'TurboChef Oven',
      model: 'Tornado 2',
      icon: 'üî•',
      status: 'maintenance',
      uptime: 92,
      temperature: 45,
      pressure: 15,
      priority: 'medium',
      category: 'Cooking',
      lastMaintenance: '2024-01-20',
      nextMaintenance: '2024-02-20',
      description: 'High-speed convection oven with microwave technology'
    },
    {
      id: 'frosty-1',
      name: 'Frosty Soft-Serve',
      model: 'F-2000',
      icon: 'üç¶',
      status: 'warning',
      uptime: 88,
      temperature: 42,
      pressure: 12,
      priority: 'low',
      category: 'Cooking',
      lastMaintenance: '2024-01-05',
      nextMaintenance: '2024-02-05',
      description: 'Commercial soft-serve ice cream machine'
    },
    {
      id: 'southbend-1',
      name: 'Southbend Range',
      model: 'SRG-36',
      icon: 'üç≥',
      status: 'operational',
      uptime: 96,
      temperature: 25,
      pressure: 0,
      priority: 'medium',
      category: 'Cooking',
      lastMaintenance: '2024-01-12',
      nextMaintenance: '2024-02-12',
      description: 'Commercial gas range with 6 burners'
    },
    {
      id: 'chicago-folders-1',
      name: 'Chicago Folders',
      model: 'CF-2000',
      icon: 'üìÑ',
      status: 'operational',
      uptime: 94,
      temperature: 22,
      pressure: 0,
      priority: 'low',
      category: 'Other',
      lastMaintenance: '2024-01-08',
      nextMaintenance: '2024-02-08',
      description: 'High-speed paper folding machine'
    }
  ];

  const categories = [...new Set(equipment.map(eq => eq.category))];
  const stats = {
    total: equipment.length,
    operational: equipment.filter(eq => eq.status === 'operational').length,
    maintenance: equipment.filter(eq => eq.status === 'maintenance').length,
    warning: equipment.filter(eq => eq.status === 'warning').length,
    offline: equipment.filter(eq => eq.status === 'offline').length
  };

  return { equipment, categories, stats };
};

const { equipment, categories, stats } = await getEquipmentData();
---

<BaseLayout>
  <div class="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900">
    
    <!-- Animated Background -->
    <div class="absolute inset-0 overflow-hidden">
      <div class="absolute -top-40 -right-40 w-80 h-80 bg-blue-500 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob"></div>
      <div class="absolute -bottom-40 -left-40 w-80 h-80 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000"></div>
      <div class="absolute top-40 left-40 w-80 h-80 bg-pink-500 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000"></div>
    </div>

    <!-- Header -->
    <div class="relative z-10 container mx-auto px-6 py-12">
      <div class="text-center mb-16">
        <h1 class="text-5xl md:text-7xl font-black text-white mb-4 bg-gradient-to-r from-blue-400 via-purple-500 to-pink-600 bg-clip-text text-transparent">
          Equipment Directory
        </h1>
        <p class="text-xl text-blue-200">Monitor and manage all your kitchen equipment</p>
      </div>

      <!-- Quick Stats - Server Islands -->
      <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-16">
        <div class="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-6 text-center hover:bg-white/20 transition-all duration-300 transform hover:scale-105">
          <div class="text-4xl font-bold text-white mb-2">{stats.total}</div>
          <div class="text-blue-200">Total Equipment</div>
        </div>
        <div class="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-6 text-center hover:bg-white/20 transition-all duration-300 transform hover:scale-105">
          <div class="text-4xl font-bold text-green-400 mb-2">{stats.operational}</div>
          <div class="text-blue-200">Operational</div>
        </div>
        <div class="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-6 text-center hover:bg-white/20 transition-all duration-300 transform hover:scale-105">
          <div class="text-4xl font-bold text-yellow-400 mb-2">{stats.maintenance + stats.warning}</div>
          <div class="text-blue-200">Needs Attention</div>
        </div>
        <div class="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-6 text-center hover:bg-white/20 transition-all duration-300 transform hover:scale-105">
          <div class="text-4xl font-bold text-red-400 mb-2">{stats.offline}</div>
          <div class="text-blue-200">Offline</div>
        </div>
      </div>

      <!-- Real-time Charts - Client Islands with visible loading -->
      <div class="mb-16">
        <h2 class="text-4xl font-bold text-white mb-8 flex items-center">
          <span class="mr-4">üìä</span>
          Live Monitoring
        </h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <RealTimeChart 
            equipmentId="perlick-1"
            dataType="temperature"
            title="Perlick Temperature"
            color="blue"
            unit="¬∞F"
            minValue={30}
            maxValue={50}
            client:visible
          />
          <RealTimeChart 
            equipmentId="hoshizaki-1"
            dataType="temperature"
            title="Hoshizaki Temperature"
            color="green"
            unit="¬∞F"
            minValue={30}
            maxValue={50}
            client:visible
          />
          <RealTimeChart 
            equipmentId="turbochef-1"
            dataType="temperature"
            title="TurboChef Temperature"
            color="red"
            unit="¬∞F"
            minValue={200}
            maxValue={500}
            client:visible
          />
        </div>
      </div>

      <!-- Equipment by Category -->
      {categories.map((category) => {
        const categoryEquipment = equipment.filter(eq => eq.category === category);
        return (
          <div class="mb-16">
            <h2 class="text-4xl font-bold text-white mb-8 flex items-center">
              <span class="mr-4">
                {category === 'Refrigeration' ? '‚ùÑÔ∏è' : 
                 category === 'Cooking' ? 'üî•' : '‚öôÔ∏è'}
              </span>
              {category}
            </h2>
            
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {categoryEquipment.map((equipment) => (
                <ModernEquipmentCard 
                  equipment={equipment}
                  priority={equipment.priority}
                  client:visible
                />
              ))}
            </div>
          </div>
        );
      })}

      <!-- Critical Equipment Status - Server Islands -->
      <div class="mb-16">
        <h2 class="text-4xl font-bold text-white mb-8 flex items-center">
          <span class="mr-4">‚ö°</span>
          Critical Equipment Status
        </h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          {equipment.filter(eq => eq.priority === 'high').map((equipment) => (
            <EquipmentStatusCard 
              equipmentId={equipment.id} 
              equipmentType={equipment.name}
              priority="high"
              client:load
            />
          ))}
        </div>
      </div>

      <!-- Live Status Monitor - Client Island with idle loading -->
      <div class="mb-16">
        <h2 class="text-4xl font-bold text-white mb-8 flex items-center">
          <span class="mr-4">üîç</span>
          Live Status Monitor
        </h2>
        <div class="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-8">
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {equipment.map((equipment) => (
              <StatusIndicator 
                equipmentType={equipment.name}
                equipmentId={equipment.id}
                client:idle
              />
            ))}
          </div>
        </div>
      </div>
    </div>

    <!-- Floating Actions - Client Island with idle loading -->
    <FloatingActions equipmentId="equipment" client:idle />
  </div>

  <style>
    @keyframes blob {
      0% { transform: translate(0px, 0px) scale(1); }
      33% { transform: translate(30px, -50px) scale(1.1); }
      66% { transform: translate(-20px, 20px) scale(0.9); }
      100% { transform: translate(0px, 0px) scale(1); }
    }
    
    .animate-blob { animation: blob 7s infinite; }
    .animation-delay-2000 { animation-delay: 2s; }
    .animation-delay-4000 { animation-delay: 4s; }
  </style>
</BaseLayout>